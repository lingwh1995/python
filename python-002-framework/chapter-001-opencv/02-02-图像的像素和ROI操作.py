import cv2

import image_util as image_util

"""
    图像处理
        图像处理的基本概念
            图像处理是计算机科学的一个分支，它使用算法来实现图像的获取、存储、传输、显示、分析和理解。图像处理的目标是将图像转换为一种更适合于分析
            的形式。这可能涉及到改善视觉效果以供人类观看，或者为自动图像分析准备图像数据。图像处理技术广泛应用于医疗成像、卫星图像分析、视频监控、
            数字摄影以及许多其他领域。
        图像处理的应用包括但不限于
            增强 ：提高图像的可视效果，例如增加对比度或亮度。
            恢复 ：减少图像中的噪声，修复有损的图像。
            分割 ：将图像分割为多个部分或对象。
            特征提取 ：识别图像中的关键点，如角点、边缘等。
        图像处理的常见任务
            图像的几何变换
            图像压缩
            图像分类
            目标检测
        图像处理的常见应用场景
            医疗成像 ：在X射线、CT、MRI等医疗图像中进行病变检测。
            自动驾驶 ：使用图像处理技术检测行人、车辆以及其他障碍物。
            面部识别 ：在安全和监控领域用于身份验证。
            工业检测 ：在制造业中检测产品缺陷，确保质量控制。
"""


def opencv_image_operation():
    """
        图像的像素操作与 ROI (Region of Interest)
            像素操作：
                访问像素值：可以通过索引直接访问图像数组中的像素值。
                修改像素值：可以直接赋值来修改图像数组中的像素值。
            ROI 操作：
                提取 ROI：可以使用数组切片来提取图像中的感兴趣区域（ROI）。
                对 ROI 进行操作：可以对提取的 ROI 进行任意的像素操作，如修改颜色、应用滤镜等。
    """
    input_path = 'd://opencv//national_day.jpg'
    output_path = 'd://opencv//national_day_new.jpg'

    # 加载图像
    image = cv2.imread(input_path)
    if image is None:
        print('图像加载失败')
        return

    # 访问 (100, 200) 处的像素值 (B, G, R)
    px_value = image[100, 200]
    print("像素值(B, G, R)：", px_value)

    # 修改该像素点为绿色 (B=0, G=255, R=0)
    image[100, 200] = [0, 255, 0]

    # 获取 ROI (例如从 (50,100) 开始，高100像素，宽200像素的区域)
    roi = image[100:200, 50:250]  # 高度范围在前，宽度范围在后
    # 可以对 ROI 进行操作，例如将其变为红色
    roi[:, :] = [0, 0, 255]  # 注意是 BGR

    # 显示图像
    image_util.show_image_in_window('图像的像素操作与ROI操作', image)

    # 保存图像
    # cv2.imwrite(output_path, image)


if __name__ == "__main__":
    opencv_image_operation()
